// Generated by CoffeeScript 1.6.3
var _ref,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Annotator.Plugin.Share = (function(_super) {
	__extends(Share, _super);

	function Share() {
		this.updateField = __bind(this.updateField, this);
		_ref = Share.__super__.constructor.apply(this, arguments);
		return _ref;
	}

	Share.prototype.field = null;

	Share.prototype.input = null;

	Share.prototype.pluginInit = function() {
		console.log("Share-pluginInit");
		//Check that annotator is working
		if (!Annotator.supported()) {
			return;
		}
		
		//-- Editor
		this.field = this.annotator.editor.addField({
			type: 'input', //options (textarea,input,select,checkbox)
			load: this.updateField,
		});
		
		//Modify the element created with annotator to be an invisible span
		var titleText = '<div class="share-text-annotator">Share without saving:</div>',
			facebook = '<div class="share-facebook-annotator button"></div>',
			twitter = '<div class="share-twitter-annotator button"></div>',
			google = '<div class="share-google-annotator button"></div>',
			email = '<div class="share-email-annotator button"></div>',
			buttons = facebook + twitter + google + email,
			select = '<li class="annotator-item"><div class="share-container-annotator">'+titleText+buttons+'</div></li>',
			newfield = Annotator.$(select);
		Annotator.$(this.field).replaceWith(newfield);
		this.field=newfield[0];
		
		//Create the actions for the buttons
		this.buttonsActions();
		
		//-- Viewer
		/*this.annotator.viewer.addField({
			load: this.updateViewer
		});*/
		
		return this.input = $(this.field).find(':input');
	};
	
	//Create the actions for the buttons
	Share.prototype.buttonsActions = function() {
	//To-Do -> Select the method that is necessary to use
		var share = this;
		$(this.field).find('.share-email-annotator').click(function() {
			var url = share.createAPIURL(2),
				subject = "Sharing a annotation with Open Video Annotation";
				body = encodeURIComponent(url);
			
			window.open('mailto:?subject='+subject+'&body='+body);
		});
		$(this.field).find('.share-facebook-annotator').click(function() {
			var url = share.createAPIURL(2),
				fbURL = 'https://www.facebook.com/sharer/sharer.php?s=100&p[url]='+encodeURIComponent(url)+'&p[title]='+encodeURIComponent('Open Video Annotation')+'&p[summary]='+share.getSource('ovaText');
			
			window.open(fbURL);
		});
		$(this.field).find('.share-twitter-annotator').click(function() {
			var url = share.createAPIURL(2),
				twitterURL = 'https://twitter.com/intent/tweet?original_referer='+encodeURIComponent(url)+'&source=tweetbutton&url='+encodeURIComponent(url)+ "&via=OpenVideoAnnotation&text=" +encodeURIComponent('I want to share the next Open Video Annotation: ');
			window.open(twitterURL);
		});
		$(this.field).find('.share-google-annotator').click(function() {
			var url = share.createAPIURL(2),
				googleURL = 'https://plus.google.com/share?url='+encodeURIComponent(url);
			window.open(googleURL);
		});
	};
	
	
	Share.prototype.createAPIURL = function(method) {
		var method = method || 1,
			url = location.protocol + '//' + location.host + location.pathname,
			url = 'http://danielcebrian.com/annotations/demo.html';
		if (method === 1){
			//to-do
		}else if (method === 2){
			var	ovaContainer = this.getSource('ovaContainer'),
				ovaSrc = this.getSource('ovaSrc'),
				ovaStart = this.getSource('ovaStart'),
				ovaEnd = this.getSource('ovaEnd'),
				ovaText = this.getSource('ovaText');
			url += '?ovaContainer='+ovaContainer
				+'&ovaSrc='+ ovaSrc
				+'&ovaStart='+ ovaStart
				+'&ovaEnd='+ ovaEnd
				+'&ovaText='+ ovaText;
		}
		return url;
	};
	
	Share.prototype.getSource = function(source) {
		var annotator = this.annotator,
			editor = annotator.editor,
			textarea = $(editor.element).find('textarea')[0],
			source = source || '';
		if(source == 'ovaContainer')
			source = editor.VideoJS !== -1?editor.VideoJS:annotator.wrapper.parent();
		else if(source == 'ovaSrc')
			source = editor.VideoJS !== -1?annotator.mplayer[editor.VideoJS].tag.currentSrc:'';
		else if(source == 'ovaStart')
			source = editor.VideoJS !== -1?annotator.mplayer[editor.VideoJS].rangeslider.getValues().start:'';
		else if(source == 'ovaEnd')
			source = editor.VideoJS !== -1?annotator.mplayer[editor.VideoJS].rangeslider.getValues().end:'';
		else if(source == 'ovaText')
			source = textarea.value;
		return encodeURIComponent(source);
	};
	
	Share.prototype.getSrc = function() {
		var annotator = this.annotator,
			editor = annotator.editor,
			ovaSrc = editor.VideoJS !== -1?annotator.mplayer[editor.VideoJS].tag.currentSrc:'';
		return encodeURIComponent(ovaSrc);
	};

	Share.prototype.updateField = function(field, annotation) {
	};

	/*Share.prototype.updateViewer = function(field, annotation) {
	};*/

	return Share;

})(Annotator.Plugin);

